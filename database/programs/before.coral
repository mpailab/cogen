f arg thrm =
  case arg of
    theorem [thrm]
    do
      {-
        Comment 1
      -}
      case thrm of
        forall [boundVariables vars, premises prems, conclusion [concl]] where vars eq thrm
        do
          h [plus[_,x]] | h [x] = concl where h in [equality, equivalence] -- comment 2
            x eq y      -- comment 3
          Efgh = x `f` y -- call f x y
          Abcd = h` abcd `y
          Identification << {<
            describe = type
            $b ++ other ~= $list`
          >}
          G = case t `g of {f [a,b] -> g [b,a]; [__,c] -> g [e,c]; _ g -> g; _ -> s}
          x_header [equality [a&(plus [p&x1, x2]), b@(plus` [x3, x1])]] <- x
        done
    done
done
