#-------------------------------------------------------------------------------

Инструкция по подготовке среды разработки:

1. Скачиваем и устанавливаем stack - инструмент для управлением всем, начиная
с настройки компилятора и заканчивая ведением всех проектов на haskell.

2. Меняем корневую директорию для stack. По умолчанию это C:\sr.
Для этого меняем значение переменной среды STACK_ROOT.

3. Собираем компилятор ghc для haskell (Не забываем открыть терминал с правами
администратора. Если будут проблемы с permission denied, то отключаем антивирус):
$ stack setup

4. Устанавливаем пакеты, для работы с haskell в IDE:
$ stack install ghc-mod stylish-haskell

5. Скачиваем и устанавливаем среду разработки Atom.

6. Открываем Atom и устанавливаем следующие пакеты:
language-haskell
haskell-ghc-mod
ide-haskell-cabal
ide-haskell
autocomplete-haskell

7. Скачиваем с https://github.com/mpailab/language-coral.git и копируем в atom_default_dir/.atom/packages подсветку синтаксиса для языка coral.

На этом базовая установка закончена. Панель Haskell IDE в Atom появится после
открытия файла с расширением hs.

Дополнительно можно установить в Atom пакет ide-haskell-hasktags для хождения
по тэгам, но прежде этого надо установить пакет hasktags через stack:
$ stack install hasktags
Затем в установках для ide-haskell-hasktags надо указать явно, чем собирать
тэги, т.е. hasktags.exe.

Кроме того, в Atom можно установить shell терминал windows. Для этого надо
установить пакет platformio-ide-terminal.

#-------------------------------------------------------------------------------

Правила хорошего тона при написании кода:
1. Проверять корректность стиля с помощью ghc-mod.
2. Табуляция равна двум пробелам.
3. Стиль для data:
data DATA
  = Constructor1
  | Constructor2
  deriving (...)

#-------------------------------------------------------------------------------

Требования к вливу правок:
1. Без ошибок должны проходить:
  stack build
  stack test
  ghc-mod.exe lint file.hs (корректность стиля можно проверить и в Haskell IDE)
2. Наличие закоментированного кода должно сопровождаться дополнительным
комментарием, зачем он нужен.

#-------------------------------------------------------------------------------
